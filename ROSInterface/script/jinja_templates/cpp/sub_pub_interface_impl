#include "sub_pub_interface.h"

{% for include in includes -%}
#include "{{include}}.h"
{% endfor %}

std::shared_ptr<BaseSubscriber>
createROSSubscriber(const std::string &type, const std::string &topic, rclcpp::Node::SharedPtr node) {
    {% for msg in all_ros_message_types -%}
    if (type == "{{msg.ros_type}}") return std::make_shared<Subscriber{{msg.struct_type}}>(topic, node);
    {% endfor %}
    throw std::runtime_error("Unsupported ROS message type: " + type);
}

std::shared_ptr<BasePublisher>
createROSPublisher(const std::string &type, const std::string &topic, rclcpp::Node::SharedPtr node){
    {% for msg in all_ros_message_types -%}
    if (type == "{{msg.ros_type}}") return std::make_shared<Publisher{{msg.struct_type}}>(topic, node);
    {% endfor %}
    throw std::runtime_error("Unsupported ROS message type: " + type);
}