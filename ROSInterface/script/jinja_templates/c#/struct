[StructLayout(LayoutKind.Sequential, Pack = 1)]
public struct {{name}} : IROSMsg {
{% for field in fields -%}
{% if field.length>1 -%}[MarshalAs(UnmanagedType.ByValArray, SizeConst = {{field.length}})]{% endif -%}
public {% if field.length==1 %}{{field.declaration}}{% elif field.length==-1 %}CArray {% else %}{{field.declaration}}[]{% endif %} {{field.name}}; {% if field.default_value != '' -%}// = {{field.default_value}}{% endif %} // {{field.declaration}}
{% endfor -%}

public string GetMsgType(){
  return "{{ros_msg_type}}";
}

public void Delete(){
 {% for field in fields -%}
  {% if field.msg_type=='string' and field.length==1 -%}
    ROSInterface.Free({{field.name}});
    {{field.name}} = IntPtr.Zero;
  {% elif field.msg_type in all_custom_types and field.length==1-%}
  {{field.name}}.Delete();
  {% elif  field.msg_type in all_custom_types and field.length>1-%}
  for (int i=0; i < {{field.length}}; i++)
  {
    {{field.length}}[i].Delete();
  }
  {% elif  field.msg_type=='string' and field.length>1-%}
  for (int i=0; i < {{field.length}}; i++)
  {
    ROSInterface.Free({{field.name}}[i]);
    {{field.name}}[i] = IntPtr.Zero;
  }
  {% elif  field.msg_type in all_custom_types and field.length==-1-%}
  foreach (var inst in ROSInterface.GetStructArray<{{field.declaration}}>({{field.name}}))
  {
    inst.Delete();
  }
  ROSInterface.Free({{field.name}}.ptr);
  {{field.name}}.ptr = IntPtr.Zero;
  {% elif  field.msg_type=='string' and field.length==-1-%}
  for (int i=0; i < {{field.name}}.length; i++)
  {
    IntPtr ptr = Marshal.ReadIntPtr({{field.name}}.ptr, Marshal.SizeOf(typeof(IntPtr)) * i);
    ROSInterface.Free(ptr);
    ptr = IntPtr.Zero;
  }
  ROSInterface.Free({{field.name}}.ptr);
  {{field.name}}.ptr = IntPtr.Zero;
  {% elif field.length==-1-%}
  ROSInterface.Free({{field.name}}.ptr);
  {{field.name}}.ptr = IntPtr.Zero;
  {%- endif %}
  {%- endfor %}

}

}